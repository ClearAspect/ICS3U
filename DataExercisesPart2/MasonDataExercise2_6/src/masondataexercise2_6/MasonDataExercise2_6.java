/*
Roan Mason
04/12/22

Design a GUI that will help the CEO of a Fortune 500 company to decide which of their 
employees to promote and whom to fire. Read in this list of names, hourly wages, and 
hours worked. Output the names of the top 3 total earners, and the bottom 3 total earners
*/
package masondataexercise2_6;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.awt.Color;
import java.text.DecimalFormat;

public class MasonDataExercise2_6 extends javax.swing.JFrame {

    /**
     * Creates new form MasonDataExercise2_6
     */
    public MasonDataExercise2_6() {
        initComponents();
        this.getContentPane().setBackground(Color.darkGray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCalculate = new javax.swing.JButton();
        lblTop = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtTopEarners = new javax.swing.JTextArea();
        lblBottom = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtBottomEarners = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCalculate.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        btnCalculate.setText("Click to determine who to fire and who to promote!");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        lblTop.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        lblTop.setText("Top 3 Earners:");

        txtTopEarners.setEditable(false);
        txtTopEarners.setColumns(20);
        txtTopEarners.setRows(5);
        jScrollPane2.setViewportView(txtTopEarners);

        lblBottom.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        lblBottom.setText("Bottom 3 Earners:");

        txtBottomEarners.setEditable(false);
        txtBottomEarners.setColumns(20);
        txtBottomEarners.setRows(5);
        jScrollPane3.setViewportView(txtBottomEarners);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnCalculate)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblTop)
                            .addGap(174, 174, 174)
                            .addComponent(lblBottom)
                            .addGap(17, 17, 17))))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCalculate)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lblTop)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(lblBottom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        // TODO add your handling code here:
        
        //Money format
        DecimalFormat money = new DecimalFormat("$#,##0.00");
        
        //Variable initialization. Variables for the names of earners and such
        String scanName, topName1 = "", topName2 = "", topName3 = "", bottomName1 = "", bottomName2 = "", bottomName3 = "";
        //Variables for hours worked, pay, wage
        double wage, hours, scanPay;
        //Variables for each earner's pay
        double topPay1 = 0.0, topPay2 = 0.0, topPay3 = 0.0, bottomPay1 = Double.MAX_VALUE, bottomPay2 = Double.MAX_VALUE, bottomPay3 = Double.MAX_VALUE;
        
        
        try {
            File f = new File("src/masondataexercise2_6/WORK.txt"); //load file
            Scanner s = new Scanner(f); //apply scanner
            
            while (s.hasNextLine()) { //while there is another line in the file
                scanName = s.nextLine(); //first line is name
                wage = Double.parseDouble(s.nextLine()); //second is wage
                hours = Double.parseDouble(s.nextLine()); //third is hours worked
                scanPay = wage * hours; //wage x hours = total $ made
                if (scanPay > topPay1) { //Scanned pay is more than the old highest pay
                    //Move all of the $ and names down one place
                    topPay3 = topPay2; 
                    topName3 = topName2;
                    topPay2 = topPay1;
                    topName2 = topName1;
                    //Scanned name and pay takes #1 spot
                    topPay1 = scanPay;
                    topName1 = scanName;
                } else if (scanPay > topPay2) { //Scanned pay is higher than the second highest *lower than first
                    //Move the old pay and name from #2 down to #3
                    topPay3 = topPay2;
                    topName3 = topName2;
                    //Scanned name and pay takes #2 spot
                    topPay2 = scanPay;
                    topName2 = scanName;
                } else if (scanPay > topPay3) { //Scanned pay is higher than the third highest *lower than first and second
                    //Scanned name and pay takes #3 spot
                    topPay3 = scanPay;
                    topName3 = scanName;
                }
                
                //Same thing as above accept the lowest values are being found instead of the highest
                if (scanPay < bottomPay1) {
                    bottomPay3 = bottomPay2;
                    bottomName3 = bottomName2;
                    bottomPay2 = bottomPay1;
                    bottomName2 = bottomName1;
                    bottomPay1 = scanPay;
                    bottomName1 = scanName;
                } else if (scanPay < bottomPay2) {
                    bottomPay3 = bottomPay2;
                    bottomName3 = bottomName2;
                    bottomPay2 = scanPay;
                    bottomName2 = scanName;
                } else if (scanPay < bottomPay3) {
                    bottomPay3 = scanPay;
                    bottomName3 = scanName;
                }
                
                //Set the top earners text box with output displaying the top earners
                txtTopEarners.setText("Name\tTotal Pay"
                        +"\n"+topName1+"\t"+money.format(topPay1)
                        +"\n"+topName2+"\t"+money.format(topPay2)
                        +"\n"+topName3+"\t"+money.format(topPay3));
                //Set the bottom earners text box with output displaying the bottom earners
                txtBottomEarners.setText("Name\tTotal Pay"
                        +"\n"+bottomName1+"\t"+money.format(bottomPay1)
                        +"\n"+bottomName2+"\t"+money.format(bottomPay2)
                        +"\n"+bottomName3+"\t"+money.format(bottomPay3));
            }
            
            
        } catch (FileNotFoundException e) {
            
        }
    }//GEN-LAST:event_btnCalculateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MasonDataExercise2_6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MasonDataExercise2_6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MasonDataExercise2_6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MasonDataExercise2_6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MasonDataExercise2_6().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBottom;
    private javax.swing.JLabel lblTop;
    private javax.swing.JTextArea txtBottomEarners;
    private javax.swing.JTextArea txtTopEarners;
    // End of variables declaration//GEN-END:variables
}
